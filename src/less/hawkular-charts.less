/***
 * CSS/LESS for the d3 SVG charts. This is SVG css not HTML css so some elements
 * may look different from standard CSS/LESS.
 */

svg {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* Trying to get SVG to act like a greedy block in all browsers */
  display: block;
  width: 100%;
  height: 100%;
}

.axis {
  path, line {
    fill: #a7a7ac;
    stroke: #a7a7ac;
    shape-rendering: crispEdges;
  }
}

/* Horizontal gridlines */

.grid .tick {
  stroke: #e6e6e6;
}

.y.axis .tick.minor {
  stroke: #a7a7ac;
}

.x.axis .tick.minor {
  stroke: #a7a7ac;
}

.y.axis text, .x.axis text {
  font-family: 'Open Sans', Helvetica, Arial, sans-serif;
  font-size: 11px;
  font-weight: normal;
  font-style: normal;
  fill: #50505a;
  text-rendering: optimizeLegibility;
}

.sparkline {
  .x.axis text, .y.axis text {
    font-family: 'Open Sans', Helvetica, Arial, sans-serif;
    font-size: 12px;
    font-weight: normal;
    font-style: normal;
    text-rendering: optimizeLegibility;
  }
}

.contextChart {
  .x.axis text, .y.axis text {
    font-family: 'Open Sans', Helvetica, Arial, sans-serif;
    font-size: 9px;
    font-weight: normal;
    font-style: normal;
    fill: #bbbbbb;
    text-rendering: optimizeLegibility;
  }
}

.x.axis path, .y.axis path {
  stroke: #d1d1d1;
}

.yAxisUnitsLabel {
  fill: #bbbbbb b;
  opacity: .5;
  font-family: 'Open Sans', Helvetica, Arial, sans-serif;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  text-rendering: optimizeLegibility;
}

/* Brush related rules */

.brush rect.extent {
  fill: rgba(0,125,199,0.1);
  shape-rendering: crispEdges;
}

.brush .resize path {
  fill: #666666;
  fill-opacity: .8;
  stroke: #000000;
  stroke-width: 1px;
}

.minLabel, .avgLabel, .highLabel {
  font-family: Arial, Verdana, sans-serif;
  font-size: 12px;
  font-weight: bold;
  text-anchor: start;
  fill: #003168;
  text-rendering: optimizeLegibility;
}

.minText, .avgText, .highText {
  font-family: Arial, Verdana, sans-serif;
  font-size: 12px;
  text-anchor: start;
  fill: #003168;
  text-rendering: optimizeLegibility;
}

/* Availability */

.availYAxisLine {
  stroke: #000000;
  fill: #000000;
  stroke-width: 1px;
}

/*
.availUpLabel {
  font-family: Arial, Verdana, sans-serif;
  font-size: 14px;
  fill: "#999";
  text-anchor: "end";
}

.availDownLabel {
  font-family: Arial, Verdana, sans-serif;
  font-size: 14px;
  fill: "#999";
  text-anchor: "end";
}
*/

/* Bar Chart */

rect.high {
  fill: #1794bc;
}

rect.low {
  fill: #70c4e2;
}

.barAvgLine {
  fill: none;
  stroke: #2e376a;
  stroke-width: 1.5;
  stroke-opacity: 0.7;
}

.alertLine {
  fill: #cc0000;
  stroke: #cc0000;
  stroke-width: 2px;
  stroke-dasharray: 10, 5;
}

.alertBounds {
  fill: #feedee;
}

.sparklineAlertLine {
  stroke: #cc0000;
  stroke-width: 1px;
  stroke-dasharray: 5, 5;
}

.prevRangeAvgLine {
  fill: none;
  stroke: #ff1a13;
  stroke-width: 3;
  stroke-opacity: 0.4;
}

.metricLine {
  fill: none;
  stroke: #1884c7;
  stroke-width: 2px;
}

.multiLine {
  stroke-width: 2px;
}

.dataPointDot {
  fill: #1884c7;
  stroke-width: 1;
  stroke: black;
}

.avgLine {
  fill: none;
  stroke: #2e376a;
  stroke-width: 1.5;
  stroke-opacity: 0.9;
}

.highLine {
  fill: none;
  stroke: #ff1a13;
  stroke-width: 1.5;
  stroke-opacity: 0.9;
}

.lowLine {
  fill: none;
  stroke: #70c4e2;
  stroke-width: 1.5;
  stroke-opacity: 0.9;
}

.chartLine {
  fill: none;
  stroke: #0757ff;
  stroke-width: 2;
}

.areaLine {
  fill: none;
  stroke: #0757ff;
  stroke-width: 2;
  stroke-opacity: 0.9;
}

/* Context Chart */

.contextArea {
  fill: #ededed;
  stroke: none;
  stroke-width: 0;
  opacity: .8;
}

.contextLine {
  fill: none;
  stroke: #9b9b9b;
  stroke-width: 2;
}

/* Sparkline Chart */

.sparklineArea {
  fill: #edf7ff;
  stroke: #cce7f5;
  stroke-width: 0;
  opacity: .8;
}

.sparklineLine {
  fill: none;
  stroke: #0088ce;
  stroke-width: 2;
}

.forecastLine {
  fill: none;
  stroke: #0757ff;
  stroke-width: 2;
  stroke-dasharray: 5, 5;
  stroke-opacity: 0.9;
}

/* Tooltip */

.d3-tip {
  background-color: rgba(67,67,67,0.95);
  border-radius: 1px;
  line-height: 1.2;
  padding: 10px;
  transition: opacity 0.3s ease;
}

/* Creates a small triangle extender for the tooltip */
.d3-tip:after {
  bottom: 0;
  border-color: transparent;
  border-style: solid;
  border-top-color: #4d4d4d;
  border-width: 8px 8px 0;
  content: "";
  height: 0;
  position: absolute;
  width: 0;
}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: 0 0 0 -8px;
  top: 100%;
  left: 50%;
}

.chartHover {
  color: #ffffff;
  display: table;
  font-family: "Open Sans", Helvetica, Arial, sans-serif;
  font-size: 12px;
  .info-item {
    display: table-row;
    span {
      display: table-cell;
      padding: 3px 5px;
    }
  }
  .separator span {
    border-top: 1px solid #777777;
    padding-top: 10px;
  }
  .before-separator span {
    padding-bottom: 10px;
  }
}

.chartHoverLabel {
  color: #d3d3d3;
}

/* Area Chart */

.highArea {
  fill: #004368;
  opacity: 0.85;
  stroke-width: 1;
  stroke: #000000;
}

.avgArea {
  fill: #0088ce;
  opacity: 0.85;
  stroke-width: 0.5;
  stroke: none;
}

.lowArea {
  fill: #bee1f4;
  opacity: 0.85;
  stroke-width: 0.5;
  stroke: none;
}

.areaChart {
  fill: #e3f1fa;
  fill-opacity: 0.9;
  stroke-width: 2;
  stroke: #3e81c7;
  stroke-opacity: .8;
}

/* Predictive Cone for forecasting */
.coneArea {
  fill: #229ece;
  opacity: 0.1;
  stroke-width: 0.5;
  stroke: none;
}

/* Scatter chart */
.highDot {
  fill: #ff1a13;
  stroke-width: 1;
  stroke: black;
}

.avgDot {
  fill: gray;
  stroke-width: 1;
  stroke: black;
}

.lowDot {
  fill: #70c4e2;
  stroke-width: 1;
  stroke: black;
}

/*
.histogram {
  stroke-width: 1.5;
  stroke-opacity: 0.9;
  stroke: black;
 opacity: 0.3;
}
*/

.annotationDot {
  fill: #ff1a13;
  opacity: 0.6;
  stroke-width: 1;
  stroke: #000;
}

.hkEvent {
  stroke-width: 1;
  stroke: #000;
}
